// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: PaymentRequest.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "PaymentRequest.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
class PaymentRequestDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<PaymentRequest>
     _instance;
} _PaymentRequest_default_instance_;

namespace protobuf_PaymentRequest_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[1];

}  // namespace

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTableField
    const TableStruct::entries[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  {0, 0, 0, ::google::protobuf::internal::kInvalidMask, 0, 0},
};

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::AuxillaryParseTableField
    const TableStruct::aux[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ::google::protobuf::internal::AuxillaryParseTableField(),
};
PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTable const
    TableStruct::schema[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
};

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PaymentRequest, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PaymentRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PaymentRequest, payment_details_version_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PaymentRequest, pki_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PaymentRequest, pki_data_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PaymentRequest, serialized_payment_details_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PaymentRequest, signature_),
  4,
  0,
  1,
  2,
  3,
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 10, sizeof(PaymentRequest)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_PaymentRequest_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "PaymentRequest.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 1);
}

}  // namespace
void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  PaymentRequest::_default_pki_type_.DefaultConstruct();
  *PaymentRequest::_default_pki_type_.get_mutable() = ::std::string("none", 4);
  ::google::protobuf::internal::OnShutdownDestroyString(
      PaymentRequest::_default_pki_type_.get_mutable());
  _PaymentRequest_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_PaymentRequest_default_instance_);}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
namespace {
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\024PaymentRequest.proto\"\225\001\n\016PaymentReques"
      "t\022\"\n\027payment_details_version\030\001 \001(\r:\0011\022\026\n"
      "\010pki_type\030\002 \001(\t:\004none\022\020\n\010pki_data\030\003 \001(\014\022"
      "\"\n\032serialized_payment_details\030\004 \002(\014\022\021\n\ts"
      "ignature\030\005 \001(\014"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 174);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "PaymentRequest.proto", &protobuf_RegisterTypes);
}
} // anonymous namespace

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_PaymentRequest_2eproto


// ===================================================================

::google::protobuf::internal::ExplicitlyConstructed< ::std::string> PaymentRequest::_default_pki_type_;
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PaymentRequest::kPaymentDetailsVersionFieldNumber;
const int PaymentRequest::kPkiTypeFieldNumber;
const int PaymentRequest::kPkiDataFieldNumber;
const int PaymentRequest::kSerializedPaymentDetailsFieldNumber;
const int PaymentRequest::kSignatureFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PaymentRequest::PaymentRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_PaymentRequest_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:PaymentRequest)
}
PaymentRequest::PaymentRequest(const PaymentRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  pki_type_.UnsafeSetDefault(&PaymentRequest::_default_pki_type_.get());
  if (from.has_pki_type()) {
    pki_type_.AssignWithDefault(&PaymentRequest::_default_pki_type_.get(), from.pki_type_);
  }
  pki_data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_pki_data()) {
    pki_data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pki_data_);
  }
  serialized_payment_details_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_serialized_payment_details()) {
    serialized_payment_details_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.serialized_payment_details_);
  }
  signature_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_signature()) {
    signature_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.signature_);
  }
  payment_details_version_ = from.payment_details_version_;
  // @@protoc_insertion_point(copy_constructor:PaymentRequest)
}

void PaymentRequest::SharedCtor() {
  _cached_size_ = 0;
  pki_type_.UnsafeSetDefault(&PaymentRequest::_default_pki_type_.get());
  pki_data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  serialized_payment_details_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  signature_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  payment_details_version_ = 1u;
}

PaymentRequest::~PaymentRequest() {
  // @@protoc_insertion_point(destructor:PaymentRequest)
  SharedDtor();
}

void PaymentRequest::SharedDtor() {
  pki_type_.DestroyNoArena(&PaymentRequest::_default_pki_type_.get());
  pki_data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  serialized_payment_details_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  signature_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void PaymentRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PaymentRequest::descriptor() {
  protobuf_PaymentRequest_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_PaymentRequest_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PaymentRequest& PaymentRequest::default_instance() {
  protobuf_PaymentRequest_2eproto::InitDefaults();
  return *internal_default_instance();
}

PaymentRequest* PaymentRequest::New(::google::protobuf::Arena* arena) const {
  PaymentRequest* n = new PaymentRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PaymentRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:PaymentRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 31u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(!pki_type_.IsDefault(&PaymentRequest::_default_pki_type_.get()));
      (*pki_type_.UnsafeRawStringPointer())->assign(*&PaymentRequest::_default_pki_type_.get());
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(!pki_data_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*pki_data_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(!serialized_payment_details_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*serialized_payment_details_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000008u) {
      GOOGLE_DCHECK(!signature_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*signature_.UnsafeRawStringPointer())->clear();
    }
    payment_details_version_ = 1u;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool PaymentRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:PaymentRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 payment_details_version = 1 [default = 1];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_payment_details_version();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &payment_details_version_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string pki_type = 2 [default = "none"];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_pki_type()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->pki_type().data(), static_cast<int>(this->pki_type().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "PaymentRequest.pki_type");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes pki_data = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_pki_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required bytes serialized_payment_details = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_serialized_payment_details()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes signature = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_signature()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PaymentRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PaymentRequest)
  return false;
#undef DO_
}

void PaymentRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PaymentRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 payment_details_version = 1 [default = 1];
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->payment_details_version(), output);
  }

  // optional string pki_type = 2 [default = "none"];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->pki_type().data(), static_cast<int>(this->pki_type().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "PaymentRequest.pki_type");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->pki_type(), output);
  }

  // optional bytes pki_data = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->pki_data(), output);
  }

  // required bytes serialized_payment_details = 4;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      4, this->serialized_payment_details(), output);
  }

  // optional bytes signature = 5;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      5, this->signature(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:PaymentRequest)
}

::google::protobuf::uint8* PaymentRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:PaymentRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 payment_details_version = 1 [default = 1];
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->payment_details_version(), target);
  }

  // optional string pki_type = 2 [default = "none"];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->pki_type().data(), static_cast<int>(this->pki_type().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "PaymentRequest.pki_type");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->pki_type(), target);
  }

  // optional bytes pki_data = 3;
  if (cached_has_bits & 0x00000002u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->pki_data(), target);
  }

  // required bytes serialized_payment_details = 4;
  if (cached_has_bits & 0x00000004u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        4, this->serialized_payment_details(), target);
  }

  // optional bytes signature = 5;
  if (cached_has_bits & 0x00000008u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        5, this->signature(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:PaymentRequest)
  return target;
}

size_t PaymentRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PaymentRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required bytes serialized_payment_details = 4;
  if (has_serialized_payment_details()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->serialized_payment_details());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional string pki_type = 2 [default = "none"];
    if (has_pki_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->pki_type());
    }

    // optional bytes pki_data = 3;
    if (has_pki_data()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->pki_data());
    }

  }
  if (_has_bits_[0 / 32] & 24u) {
    // optional bytes signature = 5;
    if (has_signature()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->signature());
    }

    // optional uint32 payment_details_version = 1 [default = 1];
    if (has_payment_details_version()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->payment_details_version());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PaymentRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:PaymentRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const PaymentRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PaymentRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:PaymentRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:PaymentRequest)
    MergeFrom(*source);
  }
}

void PaymentRequest::MergeFrom(const PaymentRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PaymentRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 31u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_pki_type();
      pki_type_.AssignWithDefault(&PaymentRequest::_default_pki_type_.get(), from.pki_type_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_pki_data();
      pki_data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pki_data_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_serialized_payment_details();
      serialized_payment_details_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.serialized_payment_details_);
    }
    if (cached_has_bits & 0x00000008u) {
      set_has_signature();
      signature_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.signature_);
    }
    if (cached_has_bits & 0x00000010u) {
      payment_details_version_ = from.payment_details_version_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void PaymentRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:PaymentRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PaymentRequest::CopyFrom(const PaymentRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PaymentRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PaymentRequest::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000004) != 0x00000004) return false;
  return true;
}

void PaymentRequest::Swap(PaymentRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PaymentRequest::InternalSwap(PaymentRequest* other) {
  using std::swap;
  pki_type_.Swap(&other->pki_type_);
  pki_data_.Swap(&other->pki_data_);
  serialized_payment_details_.Swap(&other->serialized_payment_details_);
  signature_.Swap(&other->signature_);
  swap(payment_details_version_, other->payment_details_version_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PaymentRequest::GetMetadata() const {
  protobuf_PaymentRequest_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_PaymentRequest_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PaymentRequest

// optional uint32 payment_details_version = 1 [default = 1];
bool PaymentRequest::has_payment_details_version() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void PaymentRequest::set_has_payment_details_version() {
  _has_bits_[0] |= 0x00000010u;
}
void PaymentRequest::clear_has_payment_details_version() {
  _has_bits_[0] &= ~0x00000010u;
}
void PaymentRequest::clear_payment_details_version() {
  payment_details_version_ = 1u;
  clear_has_payment_details_version();
}
::google::protobuf::uint32 PaymentRequest::payment_details_version() const {
  // @@protoc_insertion_point(field_get:PaymentRequest.payment_details_version)
  return payment_details_version_;
}
void PaymentRequest::set_payment_details_version(::google::protobuf::uint32 value) {
  set_has_payment_details_version();
  payment_details_version_ = value;
  // @@protoc_insertion_point(field_set:PaymentRequest.payment_details_version)
}

// optional string pki_type = 2 [default = "none"];
bool PaymentRequest::has_pki_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void PaymentRequest::set_has_pki_type() {
  _has_bits_[0] |= 0x00000001u;
}
void PaymentRequest::clear_has_pki_type() {
  _has_bits_[0] &= ~0x00000001u;
}
void PaymentRequest::clear_pki_type() {
  pki_type_.ClearToDefaultNoArena(&PaymentRequest::_default_pki_type_.get());
  clear_has_pki_type();
}
const ::std::string& PaymentRequest::pki_type() const {
  // @@protoc_insertion_point(field_get:PaymentRequest.pki_type)
  return pki_type_.GetNoArena();
}
void PaymentRequest::set_pki_type(const ::std::string& value) {
  set_has_pki_type();
  pki_type_.SetNoArena(&PaymentRequest::_default_pki_type_.get(), value);
  // @@protoc_insertion_point(field_set:PaymentRequest.pki_type)
}
#if LANG_CXX11
void PaymentRequest::set_pki_type(::std::string&& value) {
  set_has_pki_type();
  pki_type_.SetNoArena(
    &PaymentRequest::_default_pki_type_.get(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:PaymentRequest.pki_type)
}
#endif
void PaymentRequest::set_pki_type(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_pki_type();
  pki_type_.SetNoArena(&PaymentRequest::_default_pki_type_.get(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:PaymentRequest.pki_type)
}
void PaymentRequest::set_pki_type(const char* value, size_t size) {
  set_has_pki_type();
  pki_type_.SetNoArena(&PaymentRequest::_default_pki_type_.get(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:PaymentRequest.pki_type)
}
::std::string* PaymentRequest::mutable_pki_type() {
  set_has_pki_type();
  // @@protoc_insertion_point(field_mutable:PaymentRequest.pki_type)
  return pki_type_.MutableNoArena(&PaymentRequest::_default_pki_type_.get());
}
::std::string* PaymentRequest::release_pki_type() {
  // @@protoc_insertion_point(field_release:PaymentRequest.pki_type)
  clear_has_pki_type();
  return pki_type_.ReleaseNoArena(&PaymentRequest::_default_pki_type_.get());
}
void PaymentRequest::set_allocated_pki_type(::std::string* pki_type) {
  if (pki_type != NULL) {
    set_has_pki_type();
  } else {
    clear_has_pki_type();
  }
  pki_type_.SetAllocatedNoArena(&PaymentRequest::_default_pki_type_.get(), pki_type);
  // @@protoc_insertion_point(field_set_allocated:PaymentRequest.pki_type)
}

// optional bytes pki_data = 3;
bool PaymentRequest::has_pki_data() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void PaymentRequest::set_has_pki_data() {
  _has_bits_[0] |= 0x00000002u;
}
void PaymentRequest::clear_has_pki_data() {
  _has_bits_[0] &= ~0x00000002u;
}
void PaymentRequest::clear_pki_data() {
  pki_data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_pki_data();
}
const ::std::string& PaymentRequest::pki_data() const {
  // @@protoc_insertion_point(field_get:PaymentRequest.pki_data)
  return pki_data_.GetNoArena();
}
void PaymentRequest::set_pki_data(const ::std::string& value) {
  set_has_pki_data();
  pki_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:PaymentRequest.pki_data)
}
#if LANG_CXX11
void PaymentRequest::set_pki_data(::std::string&& value) {
  set_has_pki_data();
  pki_data_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:PaymentRequest.pki_data)
}
#endif
void PaymentRequest::set_pki_data(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_pki_data();
  pki_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:PaymentRequest.pki_data)
}
void PaymentRequest::set_pki_data(const void* value, size_t size) {
  set_has_pki_data();
  pki_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:PaymentRequest.pki_data)
}
::std::string* PaymentRequest::mutable_pki_data() {
  set_has_pki_data();
  // @@protoc_insertion_point(field_mutable:PaymentRequest.pki_data)
  return pki_data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* PaymentRequest::release_pki_data() {
  // @@protoc_insertion_point(field_release:PaymentRequest.pki_data)
  clear_has_pki_data();
  return pki_data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void PaymentRequest::set_allocated_pki_data(::std::string* pki_data) {
  if (pki_data != NULL) {
    set_has_pki_data();
  } else {
    clear_has_pki_data();
  }
  pki_data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), pki_data);
  // @@protoc_insertion_point(field_set_allocated:PaymentRequest.pki_data)
}

// required bytes serialized_payment_details = 4;
bool PaymentRequest::has_serialized_payment_details() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void PaymentRequest::set_has_serialized_payment_details() {
  _has_bits_[0] |= 0x00000004u;
}
void PaymentRequest::clear_has_serialized_payment_details() {
  _has_bits_[0] &= ~0x00000004u;
}
void PaymentRequest::clear_serialized_payment_details() {
  serialized_payment_details_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_serialized_payment_details();
}
const ::std::string& PaymentRequest::serialized_payment_details() const {
  // @@protoc_insertion_point(field_get:PaymentRequest.serialized_payment_details)
  return serialized_payment_details_.GetNoArena();
}
void PaymentRequest::set_serialized_payment_details(const ::std::string& value) {
  set_has_serialized_payment_details();
  serialized_payment_details_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:PaymentRequest.serialized_payment_details)
}
#if LANG_CXX11
void PaymentRequest::set_serialized_payment_details(::std::string&& value) {
  set_has_serialized_payment_details();
  serialized_payment_details_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:PaymentRequest.serialized_payment_details)
}
#endif
void PaymentRequest::set_serialized_payment_details(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_serialized_payment_details();
  serialized_payment_details_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:PaymentRequest.serialized_payment_details)
}
void PaymentRequest::set_serialized_payment_details(const void* value, size_t size) {
  set_has_serialized_payment_details();
  serialized_payment_details_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:PaymentRequest.serialized_payment_details)
}
::std::string* PaymentRequest::mutable_serialized_payment_details() {
  set_has_serialized_payment_details();
  // @@protoc_insertion_point(field_mutable:PaymentRequest.serialized_payment_details)
  return serialized_payment_details_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* PaymentRequest::release_serialized_payment_details() {
  // @@protoc_insertion_point(field_release:PaymentRequest.serialized_payment_details)
  clear_has_serialized_payment_details();
  return serialized_payment_details_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void PaymentRequest::set_allocated_serialized_payment_details(::std::string* serialized_payment_details) {
  if (serialized_payment_details != NULL) {
    set_has_serialized_payment_details();
  } else {
    clear_has_serialized_payment_details();
  }
  serialized_payment_details_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), serialized_payment_details);
  // @@protoc_insertion_point(field_set_allocated:PaymentRequest.serialized_payment_details)
}

// optional bytes signature = 5;
bool PaymentRequest::has_signature() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void PaymentRequest::set_has_signature() {
  _has_bits_[0] |= 0x00000008u;
}
void PaymentRequest::clear_has_signature() {
  _has_bits_[0] &= ~0x00000008u;
}
void PaymentRequest::clear_signature() {
  signature_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_signature();
}
const ::std::string& PaymentRequest::signature() const {
  // @@protoc_insertion_point(field_get:PaymentRequest.signature)
  return signature_.GetNoArena();
}
void PaymentRequest::set_signature(const ::std::string& value) {
  set_has_signature();
  signature_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:PaymentRequest.signature)
}
#if LANG_CXX11
void PaymentRequest::set_signature(::std::string&& value) {
  set_has_signature();
  signature_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:PaymentRequest.signature)
}
#endif
void PaymentRequest::set_signature(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_signature();
  signature_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:PaymentRequest.signature)
}
void PaymentRequest::set_signature(const void* value, size_t size) {
  set_has_signature();
  signature_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:PaymentRequest.signature)
}
::std::string* PaymentRequest::mutable_signature() {
  set_has_signature();
  // @@protoc_insertion_point(field_mutable:PaymentRequest.signature)
  return signature_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* PaymentRequest::release_signature() {
  // @@protoc_insertion_point(field_release:PaymentRequest.signature)
  clear_has_signature();
  return signature_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void PaymentRequest::set_allocated_signature(::std::string* signature) {
  if (signature != NULL) {
    set_has_signature();
  } else {
    clear_has_signature();
  }
  signature_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), signature);
  // @@protoc_insertion_point(field_set_allocated:PaymentRequest.signature)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
