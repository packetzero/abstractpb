// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: PaymentV3.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "PaymentV3.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace com {
namespace bitcoin {
namespace proto3 {
class PaymentDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<Payment>
     _instance;
} _Payment_default_instance_;

namespace protobuf_PaymentV3_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[1];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[1];

}  // namespace

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTableField
    const TableStruct::entries[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  {0, 0, 0, ::google::protobuf::internal::kInvalidMask, 0, 0},
};

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::AuxillaryParseTableField
    const TableStruct::aux[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ::google::protobuf::internal::AuxillaryParseTableField(),
};
PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTable const
    TableStruct::schema[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
};

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Payment, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Payment, merchant_data_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Payment, transactions_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Payment, refund_to_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Payment, memo_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Payment, tod_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(Payment)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_Payment_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "PaymentV3.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 1);
}

}  // namespace
void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  ::com::bitcoin::proto3::protobuf_OutputV3_2eproto::InitDefaults();
  _Payment_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_Payment_default_instance_);}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
namespace {
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\017PaymentV3.proto\022\022com.bitcoin.proto3\032\016O"
      "utputV3.proto\"\237\001\n\007Payment\022\025\n\rmerchant_da"
      "ta\030\001 \001(\014\022\024\n\014transactions\030\002 \003(\014\022-\n\trefund"
      "_to\030\003 \003(\0132\032.com.bitcoin.proto3.Output\022\014\n"
      "\004memo\030\004 \001(\t\022*\n\003tod\030\006 \001(\0162\035.com.bitcoin.p"
      "roto3.TimeOfDay*-\n\tTimeOfDay\022\020\n\014NotSpeci"
      "fied\020\000\022\006\n\002AM\020\001\022\006\n\002PM\020\002b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 270);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "PaymentV3.proto", &protobuf_RegisterTypes);
  ::com::bitcoin::proto3::protobuf_OutputV3_2eproto::AddDescriptors();
}
} // anonymous namespace

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_PaymentV3_2eproto

const ::google::protobuf::EnumDescriptor* TimeOfDay_descriptor() {
  protobuf_PaymentV3_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_PaymentV3_2eproto::file_level_enum_descriptors[0];
}
bool TimeOfDay_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Payment::kMerchantDataFieldNumber;
const int Payment::kTransactionsFieldNumber;
const int Payment::kRefundToFieldNumber;
const int Payment::kMemoFieldNumber;
const int Payment::kTodFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Payment::Payment()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_PaymentV3_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.bitcoin.proto3.Payment)
}
Payment::Payment(const Payment& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      transactions_(from.transactions_),
      refund_to_(from.refund_to_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  merchant_data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.merchant_data().size() > 0) {
    merchant_data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.merchant_data_);
  }
  memo_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.memo().size() > 0) {
    memo_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.memo_);
  }
  tod_ = from.tod_;
  // @@protoc_insertion_point(copy_constructor:com.bitcoin.proto3.Payment)
}

void Payment::SharedCtor() {
  merchant_data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  memo_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  tod_ = 0;
  _cached_size_ = 0;
}

Payment::~Payment() {
  // @@protoc_insertion_point(destructor:com.bitcoin.proto3.Payment)
  SharedDtor();
}

void Payment::SharedDtor() {
  merchant_data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  memo_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Payment::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Payment::descriptor() {
  protobuf_PaymentV3_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_PaymentV3_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Payment& Payment::default_instance() {
  protobuf_PaymentV3_2eproto::InitDefaults();
  return *internal_default_instance();
}

Payment* Payment::New(::google::protobuf::Arena* arena) const {
  Payment* n = new Payment;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Payment::Clear() {
// @@protoc_insertion_point(message_clear_start:com.bitcoin.proto3.Payment)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  transactions_.Clear();
  refund_to_.Clear();
  merchant_data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  memo_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  tod_ = 0;
  _internal_metadata_.Clear();
}

bool Payment::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.bitcoin.proto3.Payment)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bytes merchant_data = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_merchant_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated bytes transactions = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->add_transactions()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .com.bitcoin.proto3.Output refund_to = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_refund_to()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string memo = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_memo()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->memo().data(), static_cast<int>(this->memo().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "com.bitcoin.proto3.Payment.memo"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .com.bitcoin.proto3.TimeOfDay tod = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_tod(static_cast< ::com::bitcoin::proto3::TimeOfDay >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.bitcoin.proto3.Payment)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.bitcoin.proto3.Payment)
  return false;
#undef DO_
}

void Payment::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.bitcoin.proto3.Payment)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes merchant_data = 1;
  if (this->merchant_data().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->merchant_data(), output);
  }

  // repeated bytes transactions = 2;
  for (int i = 0, n = this->transactions_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteBytes(
      2, this->transactions(i), output);
  }

  // repeated .com.bitcoin.proto3.Output refund_to = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->refund_to_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->refund_to(static_cast<int>(i)), output);
  }

  // string memo = 4;
  if (this->memo().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->memo().data(), static_cast<int>(this->memo().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "com.bitcoin.proto3.Payment.memo");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->memo(), output);
  }

  // .com.bitcoin.proto3.TimeOfDay tod = 6;
  if (this->tod() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      6, this->tod(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:com.bitcoin.proto3.Payment)
}

::google::protobuf::uint8* Payment::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:com.bitcoin.proto3.Payment)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes merchant_data = 1;
  if (this->merchant_data().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->merchant_data(), target);
  }

  // repeated bytes transactions = 2;
  for (int i = 0, n = this->transactions_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteBytesToArray(2, this->transactions(i), target);
  }

  // repeated .com.bitcoin.proto3.Output refund_to = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->refund_to_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, this->refund_to(static_cast<int>(i)), deterministic, target);
  }

  // string memo = 4;
  if (this->memo().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->memo().data(), static_cast<int>(this->memo().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "com.bitcoin.proto3.Payment.memo");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->memo(), target);
  }

  // .com.bitcoin.proto3.TimeOfDay tod = 6;
  if (this->tod() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      6, this->tod(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.bitcoin.proto3.Payment)
  return target;
}

size_t Payment::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.bitcoin.proto3.Payment)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated bytes transactions = 2;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->transactions_size());
  for (int i = 0, n = this->transactions_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::BytesSize(
      this->transactions(i));
  }

  // repeated .com.bitcoin.proto3.Output refund_to = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->refund_to_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->refund_to(static_cast<int>(i)));
    }
  }

  // bytes merchant_data = 1;
  if (this->merchant_data().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->merchant_data());
  }

  // string memo = 4;
  if (this->memo().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->memo());
  }

  // .com.bitcoin.proto3.TimeOfDay tod = 6;
  if (this->tod() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->tod());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Payment::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.bitcoin.proto3.Payment)
  GOOGLE_DCHECK_NE(&from, this);
  const Payment* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Payment>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.bitcoin.proto3.Payment)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.bitcoin.proto3.Payment)
    MergeFrom(*source);
  }
}

void Payment::MergeFrom(const Payment& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.bitcoin.proto3.Payment)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  transactions_.MergeFrom(from.transactions_);
  refund_to_.MergeFrom(from.refund_to_);
  if (from.merchant_data().size() > 0) {

    merchant_data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.merchant_data_);
  }
  if (from.memo().size() > 0) {

    memo_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.memo_);
  }
  if (from.tod() != 0) {
    set_tod(from.tod());
  }
}

void Payment::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.bitcoin.proto3.Payment)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Payment::CopyFrom(const Payment& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.bitcoin.proto3.Payment)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Payment::IsInitialized() const {
  return true;
}

void Payment::Swap(Payment* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Payment::InternalSwap(Payment* other) {
  using std::swap;
  transactions_.InternalSwap(&other->transactions_);
  refund_to_.InternalSwap(&other->refund_to_);
  merchant_data_.Swap(&other->merchant_data_);
  memo_.Swap(&other->memo_);
  swap(tod_, other->tod_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Payment::GetMetadata() const {
  protobuf_PaymentV3_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_PaymentV3_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Payment

// bytes merchant_data = 1;
void Payment::clear_merchant_data() {
  merchant_data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& Payment::merchant_data() const {
  // @@protoc_insertion_point(field_get:com.bitcoin.proto3.Payment.merchant_data)
  return merchant_data_.GetNoArena();
}
void Payment::set_merchant_data(const ::std::string& value) {
  
  merchant_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.bitcoin.proto3.Payment.merchant_data)
}
#if LANG_CXX11
void Payment::set_merchant_data(::std::string&& value) {
  
  merchant_data_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:com.bitcoin.proto3.Payment.merchant_data)
}
#endif
void Payment::set_merchant_data(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  merchant_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.bitcoin.proto3.Payment.merchant_data)
}
void Payment::set_merchant_data(const void* value, size_t size) {
  
  merchant_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.bitcoin.proto3.Payment.merchant_data)
}
::std::string* Payment::mutable_merchant_data() {
  
  // @@protoc_insertion_point(field_mutable:com.bitcoin.proto3.Payment.merchant_data)
  return merchant_data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Payment::release_merchant_data() {
  // @@protoc_insertion_point(field_release:com.bitcoin.proto3.Payment.merchant_data)
  
  return merchant_data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Payment::set_allocated_merchant_data(::std::string* merchant_data) {
  if (merchant_data != NULL) {
    
  } else {
    
  }
  merchant_data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), merchant_data);
  // @@protoc_insertion_point(field_set_allocated:com.bitcoin.proto3.Payment.merchant_data)
}

// repeated bytes transactions = 2;
int Payment::transactions_size() const {
  return transactions_.size();
}
void Payment::clear_transactions() {
  transactions_.Clear();
}
const ::std::string& Payment::transactions(int index) const {
  // @@protoc_insertion_point(field_get:com.bitcoin.proto3.Payment.transactions)
  return transactions_.Get(index);
}
::std::string* Payment::mutable_transactions(int index) {
  // @@protoc_insertion_point(field_mutable:com.bitcoin.proto3.Payment.transactions)
  return transactions_.Mutable(index);
}
void Payment::set_transactions(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:com.bitcoin.proto3.Payment.transactions)
  transactions_.Mutable(index)->assign(value);
}
#if LANG_CXX11
void Payment::set_transactions(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:com.bitcoin.proto3.Payment.transactions)
  transactions_.Mutable(index)->assign(std::move(value));
}
#endif
void Payment::set_transactions(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  transactions_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:com.bitcoin.proto3.Payment.transactions)
}
void Payment::set_transactions(int index, const void* value, size_t size) {
  transactions_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:com.bitcoin.proto3.Payment.transactions)
}
::std::string* Payment::add_transactions() {
  // @@protoc_insertion_point(field_add_mutable:com.bitcoin.proto3.Payment.transactions)
  return transactions_.Add();
}
void Payment::add_transactions(const ::std::string& value) {
  transactions_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:com.bitcoin.proto3.Payment.transactions)
}
#if LANG_CXX11
void Payment::add_transactions(::std::string&& value) {
  transactions_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:com.bitcoin.proto3.Payment.transactions)
}
#endif
void Payment::add_transactions(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  transactions_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:com.bitcoin.proto3.Payment.transactions)
}
void Payment::add_transactions(const void* value, size_t size) {
  transactions_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:com.bitcoin.proto3.Payment.transactions)
}
const ::google::protobuf::RepeatedPtrField< ::std::string>&
Payment::transactions() const {
  // @@protoc_insertion_point(field_list:com.bitcoin.proto3.Payment.transactions)
  return transactions_;
}
::google::protobuf::RepeatedPtrField< ::std::string>*
Payment::mutable_transactions() {
  // @@protoc_insertion_point(field_mutable_list:com.bitcoin.proto3.Payment.transactions)
  return &transactions_;
}

// repeated .com.bitcoin.proto3.Output refund_to = 3;
int Payment::refund_to_size() const {
  return refund_to_.size();
}
void Payment::clear_refund_to() {
  refund_to_.Clear();
}
const ::com::bitcoin::proto3::Output& Payment::refund_to(int index) const {
  // @@protoc_insertion_point(field_get:com.bitcoin.proto3.Payment.refund_to)
  return refund_to_.Get(index);
}
::com::bitcoin::proto3::Output* Payment::mutable_refund_to(int index) {
  // @@protoc_insertion_point(field_mutable:com.bitcoin.proto3.Payment.refund_to)
  return refund_to_.Mutable(index);
}
::com::bitcoin::proto3::Output* Payment::add_refund_to() {
  // @@protoc_insertion_point(field_add:com.bitcoin.proto3.Payment.refund_to)
  return refund_to_.Add();
}
::google::protobuf::RepeatedPtrField< ::com::bitcoin::proto3::Output >*
Payment::mutable_refund_to() {
  // @@protoc_insertion_point(field_mutable_list:com.bitcoin.proto3.Payment.refund_to)
  return &refund_to_;
}
const ::google::protobuf::RepeatedPtrField< ::com::bitcoin::proto3::Output >&
Payment::refund_to() const {
  // @@protoc_insertion_point(field_list:com.bitcoin.proto3.Payment.refund_to)
  return refund_to_;
}

// string memo = 4;
void Payment::clear_memo() {
  memo_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& Payment::memo() const {
  // @@protoc_insertion_point(field_get:com.bitcoin.proto3.Payment.memo)
  return memo_.GetNoArena();
}
void Payment::set_memo(const ::std::string& value) {
  
  memo_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.bitcoin.proto3.Payment.memo)
}
#if LANG_CXX11
void Payment::set_memo(::std::string&& value) {
  
  memo_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:com.bitcoin.proto3.Payment.memo)
}
#endif
void Payment::set_memo(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  memo_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.bitcoin.proto3.Payment.memo)
}
void Payment::set_memo(const char* value, size_t size) {
  
  memo_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.bitcoin.proto3.Payment.memo)
}
::std::string* Payment::mutable_memo() {
  
  // @@protoc_insertion_point(field_mutable:com.bitcoin.proto3.Payment.memo)
  return memo_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Payment::release_memo() {
  // @@protoc_insertion_point(field_release:com.bitcoin.proto3.Payment.memo)
  
  return memo_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Payment::set_allocated_memo(::std::string* memo) {
  if (memo != NULL) {
    
  } else {
    
  }
  memo_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), memo);
  // @@protoc_insertion_point(field_set_allocated:com.bitcoin.proto3.Payment.memo)
}

// .com.bitcoin.proto3.TimeOfDay tod = 6;
void Payment::clear_tod() {
  tod_ = 0;
}
::com::bitcoin::proto3::TimeOfDay Payment::tod() const {
  // @@protoc_insertion_point(field_get:com.bitcoin.proto3.Payment.tod)
  return static_cast< ::com::bitcoin::proto3::TimeOfDay >(tod_);
}
void Payment::set_tod(::com::bitcoin::proto3::TimeOfDay value) {
  
  tod_ = value;
  // @@protoc_insertion_point(field_set:com.bitcoin.proto3.Payment.tod)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace proto3
}  // namespace bitcoin
}  // namespace com

// @@protoc_insertion_point(global_scope)
